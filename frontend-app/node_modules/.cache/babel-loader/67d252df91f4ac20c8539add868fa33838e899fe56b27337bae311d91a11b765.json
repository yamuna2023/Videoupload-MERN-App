{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaswanth.mamidisetti\\\\Desktop\\\\Yamuna-projects\\\\yamuna-videoupload-mern-app\\\\frontend-app\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/UploadForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [title, setTitle] = useState('ssssssss');\n  const [description, setDescription] = useState('sssssss');\n  const [thumbnail, setThumbnail] = useState(null);\n  const [video, setVideo] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('thumbnail', thumbnail);\n    formData.append('video', video);\n    console.log(formData);\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Upload successful!');\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        backgroundColor: 'skyblue'\n      },\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innercontainer2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commonparagraph\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          maxLength: \"50\",\n          required: true,\n          className: \"commontextinpustyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commonparagraph\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"commontextinpustyle\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          maxLength: \"200\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commonparagraph\",\n          children: \"Select Image File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"commontextinpustyle\",\n          type: \"file\",\n          accept: \"image/jpeg,image/png\",\n          onChange: e => setThumbnail(e.target.files[0]),\n          required: true,\n          style: {\n            color: thumbnail !== null ? 'green' : 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commonparagraph\",\n          children: \"Select Video File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"commontextinpustyle\",\n          type: \"file\",\n          accept: \"video/mpg,video/avi,video/mp4\",\n          onChange: e => setVideo(e.target.files[0]),\n          required: true,\n          style: {\n            color: video !== null ? 'green' : 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonstyle\",\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"cQZOB/dwf7Px6kLeMYASusyGD8s=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","description","setDescription","thumbnail","setThumbnail","video","setVideo","handleSubmit","e","preventDefault","formData","FormData","append","console","log","post","headers","alert","error","className","children","style","backgroundColor","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","maxLength","required","accept","files","color","_c","$RefreshReg$"],"sources":["C:/Users/yaswanth.mamidisetti/Desktop/Yamuna-projects/yamuna-videoupload-mern-app/frontend-app/src/components/UploadForm.js"],"sourcesContent":["// frontend/src/components/UploadForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css'\r\nconst UploadForm = () => {\r\n    const [title, setTitle] = useState('ssssssss');\r\n    const [description, setDescription] = useState('sssssss');\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [video, setVideo] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('description', description);\r\n        formData.append('thumbnail', thumbnail);\r\n        formData.append('video', video);\r\n        console.log(formData)\r\n        try {\r\n            await axios.post('http://localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            alert('Upload successful!');\r\n        } catch (error) {\r\n            console.error('Error uploading media:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n        <form  style={{ backgroundColor: 'skyblue' }} onSubmit={handleSubmit}>\r\n            <div className='innercontainer2'>\r\n            <p className=\"commonparagraph\"  >Title</p>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                maxLength=\"50\"\r\n                required\r\n                className=\"commontextinpustyle\"\r\n            />\r\n            <p className=\"commonparagraph\"  >Description</p>\r\n\r\n            <textarea\r\n                className=\"commontextinpustyle\"\r\n                placeholder=\"Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                maxLength=\"200\"\r\n                required\r\n            />\r\n            <p className=\"commonparagraph\"  >Select Image File</p>\r\n\r\n            <input\r\n                className=\"commontextinpustyle\"\r\n                type=\"file\"\r\n                accept=\"image/jpeg,image/png\"\r\n                onChange={(e) => setThumbnail(e.target.files[0])}\r\n                required\r\n                style={{color: thumbnail !== null ?'green':'red'}}\r\n            />\r\n            <p className=\"commonparagraph\"  >Select Video File</p>\r\n\r\n            <input\r\n                className=\"commontextinpustyle\"\r\n                type=\"file\"\r\n                accept=\"video/mpg,video/avi,video/mp4\"\r\n                onChange={(e) => setVideo(e.target.files[0])}\r\n                required\r\n                style={{color: video !== null ?'green':'red'}}\r\n\r\n            />\r\n            </div>\r\n            <button className='buttonstyle' type=\"submit\">Upload</button>\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}