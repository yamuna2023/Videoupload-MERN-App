{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaswanth.mamidisetti\\\\Desktop\\\\Yamuna-projects\\\\yamuna-videoupload-mern-app\\\\frontend-app\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/UploadForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [title, setTitle] = useState('ssssssss');\n  const [description, setDescription] = useState('sssssss');\n  const [thumbnail, setThumbnail] = useState(null);\n  const [video, setVideo] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('thumbnail', thumbnail);\n    formData.append('video', video);\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Upload successful!');\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      backgroundColor: 'skyblue'\n    },\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      maxLength: \"50\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      maxLength: \"200\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/jpeg,image/png\",\n      onChange: e => setThumbnail(e.target.files[0]),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/mpg,video/avi,video/mp4\",\n      onChange: e => setVideo(e.target.files[0]),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"cQZOB/dwf7Px6kLeMYASusyGD8s=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","description","setDescription","thumbnail","setThumbnail","video","setVideo","handleSubmit","e","preventDefault","formData","FormData","append","post","headers","alert","error","console","style","backgroundColor","onSubmit","children","type","placeholder","value","onChange","target","maxLength","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","files","_c","$RefreshReg$"],"sources":["C:/Users/yaswanth.mamidisetti/Desktop/Yamuna-projects/yamuna-videoupload-mern-app/frontend-app/src/components/UploadForm.js"],"sourcesContent":["// frontend/src/components/UploadForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n    const [title, setTitle] = useState('ssssssss');\r\n    const [description, setDescription] = useState('sssssss');\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [video, setVideo] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('description', description);\r\n        formData.append('thumbnail', thumbnail);\r\n        formData.append('video', video);\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            alert('Upload successful!');\r\n        } catch (error) {\r\n            console.error('Error uploading media:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form style={{backgroundColor:'skyblue'}} onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                maxLength=\"50\"\r\n                required\r\n            />\r\n            <textarea\r\n                placeholder=\"Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                maxLength=\"200\"\r\n                required\r\n            />\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/jpeg,image/png\"\r\n                onChange={(e) => setThumbnail(e.target.files[0])}\r\n                required\r\n            />\r\n            <input\r\n                type=\"file\"\r\n                accept=\"video/mpg,video/avi,video/mp4\"\r\n                onChange={(e) => setVideo(e.target.files[0])}\r\n                required\r\n            />\r\n            <button type=\"submit\">Upload</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}